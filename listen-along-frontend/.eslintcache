[{"/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/middleware/searchMiddleware.js":"1","/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/components/QueueItem.js":"2","/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/reducers/queueReducer.js":"3","/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/middleware/devicesMiddleware.js":"4","/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/middleware/sessionMiddleware.js":"5","/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/index.js":"6","/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/middleware/loggerMiddleware.js":"7","/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/components/Main.js":"8"},{"size":1809,"mtime":1609453103224,"results":"9","hashOfConfig":"10"},{"size":1556,"mtime":1609459303174,"results":"11","hashOfConfig":"10"},{"size":519,"mtime":1609460686022,"results":"12","hashOfConfig":"10"},{"size":2182,"mtime":1609461686188,"results":"13","hashOfConfig":"10"},{"size":4564,"mtime":1609464941482,"results":"14","hashOfConfig":"10"},{"size":808,"mtime":1609470313748,"results":"15","hashOfConfig":"10"},{"size":180,"mtime":1609450726582,"results":"16","hashOfConfig":"10"},{"size":2016,"mtime":1609470696886,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bhbi9s",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/middleware/searchMiddleware.js",["36","37"],"/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/components/QueueItem.js",["38","39"],"/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/reducers/queueReducer.js",["40"],"/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/middleware/devicesMiddleware.js",["41"],"// REF: https://developer.spotify.com/documentation/web-api/reference/\n// REF: https://developer.spotify.com/documentation/web-api/reference/player/\n// REF: https://developer.spotify.com/documentation/web-api/guides/using-connect-web-api/\n\nimport fetch from \"isomorphic-unfetch\";\n\nimport {\n  FETCH_AVAILABLE_DEVICES,\n  TRANSFER_PLAYBACK_TO_DEVICE,\n} from \"../constants/ActionTypes.js\";\n\nimport {\n  fetchAvailableDevices,\n  fetchAvailableDevicesSuccess,\n  fetchAvailableDevicesError,\n  transferPlaybackToDeviceSuccess,\n  transferPlaybackToDeviceError,\n} from \"../actions/devicesActions.js\";\n\nconst SPOTIFY_API_BASE = \"https://api.spotify.com/v1\";\n\n// ================= //\n//      DEVICES      //\n// ================= //\n\nexport default (store) => (next) => (action) => {\n  const result = next(action);\n  switch (action.type) {\n    // Retrieve a list of available devices\n    case FETCH_AVAILABLE_DEVICES: {\n      fetch(`${SPOTIFY_API_BASE}/me/player/devices`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${store.getState().session.access_token}`,\n        },\n      })\n        .then((r) => r.json())\n        .then((r) => {\n          if (r.error) {\n            store.dispatch(fetchAvailableDevicesError(r.error));\n          } else {\n            store.dispatch(fetchAvailableDevicesSuccess(r.devices));\n          }\n        });\n      break;\n    }\n\n    // Set playback to \"COLLABORATIVE\" by selecting a device (\"Collaborative\" will be one)\n    case TRANSFER_PLAYBACK_TO_DEVICE: {\n      fetch(`${SPOTIFY_API_BASE}/me/player`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${store.getState().session.access_token}`,\n        },\n        body: JSON.stringify({\n          device_ids: [action.decideId],\n        }),\n      })\n        .then((r) => r.json())\n        .then((r) => {\n          if (r.error) {\n            store.dispatch(transferPlaybackToDeviceError(r.error));\n          } else {\n            store.dispatch(transferPlaybackToDeviceSuccess());\n            store.dispatch(fetchAvailableDevices());\n          }\n        });\n      break;\n    }\n\n    // DEFAULT: Do nothing...\n    default:\n      break;\n  }\n\n  return result;\n};\n","/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/middleware/sessionMiddleware.js",["42"],"// REF: https://developer.spotify.com/documentation/web-api/reference/\n// REF: https://developer.spotify.com/documentation/web-api/reference/users-profile/get-current-users-profile/\n// REF: https://developer.spotify.com/documentation/general/guides/authorization-guide/\n// REF: https://developer.spotify.com/documentation/general/guides/scopes/\n\nimport fetch from \"isomorphic-unfetch\";\n\nimport { LOAD, LOGIN } from \"../constants/ActionTypes.js\";\nimport {\n  loginSuccess,\n  updateCurrentUser,\n  updateTokenSuccess,\n} from \"../actions/sessionActions.js\";\n\nimport * as Config from \"../config/app.js\";\n\nconst SPOTIFY_API_BASE = \"https://api.spotify.com/v1\";\n\n// ================= //\n//     SESSION       //\n// ================= //\n\nconst getCurrentUser = () => (dispatch, getState) =>\n  fetch(`${SPOTIFY_API_BASE}/me`, {\n    headers: {\n      Authorization: \"Bearer \" + getState().session.access_token,\n    },\n  })\n    .then((res) => res.json())\n    .then((res) => {\n      dispatch(updateCurrentUser(res));\n    });\n\nconst updateToken = () => (dispatch, getState) => {\n  return fetch(`${Config.HOST}/auth/token`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      refresh_token: getState().session.refresh_token,\n    }),\n    headers: new Headers({\n      \"Content-Type\": \"application/json\",\n    }),\n  })\n    .then((res) => res.json())\n    .then((res) => {\n      console.log(res);\n      dispatch(updateTokenSuccess(res.access_token));\n    });\n};\n\nexport default (store) => (next) => (action) => {\n  const result = next(action);\n  switch (action.type) {\n    // Load auth for user...\n    case LOAD: {\n      const session = store.getState().session;\n      const expiresIn = session.expires_in;\n      const needsToUpdate =\n        !expiresIn || expiresIn - Date.now() < 10 * 60 * 1000;\n      if (needsToUpdate) {\n        console.log(`sessionMiddleware > needs to update access token`);\n        const refreshToken = session.refresh_token;\n        if (refreshToken) {\n          console.log(`sessionMiddleware > using refresh token`);\n          store\n            .dispatch(updateToken())\n            .then(() => {\n              return store.dispatch(getCurrentUser());\n            })\n            .then(() => {\n              store.dispatch(loginSuccess());\n            });\n        }\n      } else {\n        console.log(`sessionMiddleware > no need to update access token`);\n        store.dispatch(getCurrentUser()).then(() => {\n          store.dispatch(loginSuccess());\n        });\n      }\n      break;\n    }\n\n    // Login user...\n    case LOGIN: {\n      const getLoginURL = (scopes) => {\n        return `${Config.HOST}/auth/login?scope=${encodeURIComponent(\n          scopes.join(\" \")\n        )}`;\n      };\n\n      const width = 450,\n        height = 730,\n        left = window.screen.width / 2 - width / 2,\n        top = window.screen.height / 2 - height / 2;\n\n      const messageFunc = (event) => {\n        try {\n          const hash = JSON.parse(event.data);\n          if (hash.type === \"access_token\") {\n            window.removeEventListener(\"message\", messageFunc, false);\n            const accessToken = hash.access_token;\n            const expiresIn = hash.expires_in;\n            if (accessToken === \"\") {\n              // *** to-do: implement login error\n            } else {\n              const refreshToken = hash.refresh_token;\n              localStorage.setItem(\"refreshToken\", refreshToken);\n              localStorage.setItem(\"accessToken\", accessToken);\n              localStorage.setItem(\"expiresIn\", Date.now() + expiresIn * 1000);\n              store.dispatch(updateTokenSuccess(accessToken));\n              store\n                .dispatch(getCurrentUser())\n                .then(() => store.dispatch(loginSuccess()));\n            }\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      };\n      window.addEventListener(\"message\", messageFunc, false);\n\n      // SCOPES:\n      // ==> • user-read-playback-state | Read access to a user's player state\n      // ==> • user-modify-playback-state | Write access to a user's playback state\n      const url = getLoginURL([\n        `user-read-playback-state`,\n        `user-modify-playback-state`,\n      ]);\n      window.open(\n        url,\n        \"Spotify\",\n        `menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=` +\n          width +\n          `, height=` +\n          height +\n          `, top=` +\n          top +\n          `, left=` +\n          left\n      );\n      break;\n    }\n\n    // DEFAULT: Do nothing...\n    default:\n      break;\n  }\n\n  return result;\n};\n","/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/index.js",[],"/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/middleware/loggerMiddleware.js",["43","44"],"/Users/tcsamuelson/DEV/_seir/projects/project-week-3/listen-along-app/react-main/src/components/Main.js",[],{"ruleId":"45","severity":1,"message":"46","line":53,"column":1,"nodeType":"47","endLine":68,"endColumn":3},{"ruleId":"48","severity":1,"message":"49","line":59,"column":7,"nodeType":"50","messageId":"51","endLine":59,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":7,"column":1,"nodeType":"47","endLine":55,"endColumn":3},{"ruleId":"52","severity":1,"message":"53","line":19,"column":9,"nodeType":"54","endLine":19,"endColumn":76},{"ruleId":"45","severity":1,"message":"46","line":12,"column":1,"nodeType":"47","endLine":19,"endColumn":3},{"ruleId":"45","severity":1,"message":"46","line":26,"column":1,"nodeType":"47","endLine":77,"endColumn":3},{"ruleId":"45","severity":1,"message":"46","line":51,"column":1,"nodeType":"47","endLine":150,"endColumn":3},{"ruleId":"45","severity":1,"message":"46","line":5,"column":1,"nodeType":"47","endLine":8,"endColumn":3},{"ruleId":"55","severity":1,"message":"56","line":6,"column":9,"nodeType":"57","messageId":"58","endLine":6,"endColumn":15},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar"]